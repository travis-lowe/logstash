input {
	tcp {
		type => "eventlog"
		port => 3515
		codec => json_lines
	}

	tcp {
		port => 5514
		type => mcafee
	}
	udp {
		port => 5514
		type => mcafee
	}

	tcp {
		port => 5515
		type => Sonicwall
	}
	udp {
		port => 5515
		type => Sonicwall
	}

}

filter {
	#Sonicwall Filter
	if [type] == "Sonicwall" {
		kv {
                        exclude_keys => [ "id", "c", "m", "n" ]
                }

		mutate {
                        remove_field => [  "sn", "time", "mac" ]
                }

		mutate {
			split => { "src" => ":" }
		}

		mutate {
			split => { "dst" => ":" }
		}

		geoip {
			add_tag => [ "SourceIP" ]
			source => "src"
		}
		geoip {
			add_tag => [ "DestinationIP" ]
			source => "dst"
		}
	}

	#Proxy Filter
	if [type] == "mcafee" {


		grok {
			match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{WORD:Detector}\s%{WORD:ProxyName}: %{SYSLOG5424SD} %{QS:userid} %{IP:client} %{IP:Remote-Host} %{WORD:int1} %{WORD:int2} %{WORD:hit-miss} %{QS:request} %{QS:category} %{QS:Proxy-Risk} %{QS:File-Type} %{WORD:int3} %{WORD:int4} %{QS:browser-agent} %{QS:Origin-Address} %{GREEDYDATA:end-of-message} " }
		}
		
		mutate {
			remove_field => [ "int1", "int2", "ProxyName", "int3", "int4" ]
		}
		
		geoip {
			add_tag => [ "SourceIP" ]
			source => "client"
		}
		geoip {
			add_tag => [ "DestinationIP" ]
			source => "Remote-Host"
		}
	}
	
	#Server Event Log Filter
	if [type] == "eventlog" {
		mutate {
			# Lowercase some values that are always in uppercase
			lowercase => [ "EventType", "FileName", "Hostname", "Severity" ]
		}

		mutate {
			# Set source to what the message says
			rename => [ "Hostname", "@source_host" ]
		}
		date {
			#Convert timestamp from integer in UTC
			match => [ "EventReceivedTime", "UNIX" ]
		}

		mutate {
			# Rename some of the fields to something more useful
			rename => [ "Message", "@message" ]
			rename => [ "Severity", "eventlog_severity" ]
			rename => [ "SeverityValue", "eventlog_severity"]
			rename => [ "Channel", "eventlog_channel"]
			rename => [ "SourceName", "eventlog_program"]
			rename => [ "SourceModuleName", "nxlog_input"]
			rename => [ "Category", "eventlog_category"]
			rename => [ "EventID", "eventlog_id" ]
			rename => [ "RecordNumber", "eventlog_record_number"]
			rename => [ "ProcessID", "eventlog_pid" ]
		}

		mutate {
			#Removing Redundant Fields
			remove_field => [ "SourceModuleType", "EventTimeWritten", "EventTime", "EventReceivedTime", "EventType" ]
		}
		
		translate {
			field => "eventlog_id"
			destination => "eventlog_id_desc"
			
			dictionary => [
				"4624", "Logon Success",
				"4625", "Logon Failure",
				"1000", "App Error",
				"1002", "App Hang",
				"1001", "BSOD or WER",
				"7022", "Service Crash",
				"7023", "Service Crash",
				"7024", "Service Crash",
				"7026", "Service Crash",
				"7031", "Service Crash",
				"7032", "Service Crash",
				"7034", "Service Crash",
				"20", "Update Fail",
				"24", "Update Fail",
				"25", "Update Fail",
				"31", "Update Fail",
				"34", "Update Fail",
				"25", "Update Fail",
				"1009", "Hotpatch Fail",
				#"2004", "Firewall Rule Add",
				#"2005", "Firewall Rule Chg",
				#"2006", "Firewall Rule Del",
				#"2033", "Firewall Rule Del",
				#"2009", "Firewall GP Load Fail",
				"104", "Event Log Cleared",
				"1102", "Audit Log Cleared",
				"6", "New Kernel Filter Driver",
				"7045", "New Service",
				"1022", "New MSI Installed",
				"1033", "New MSI Installed",
				"1022", "New MSI Installed",
				"4740", "Account Lockout",
				"4728", "User Added to Priv Group",
				"4732", "User Added to Priv Group",
				"4756", "User Added to Priv Group",
				"4735", "Sec Group Modification",
				"4648", "Logon Explicit Creds",
				"5038", "Invalid Img Hash of File",
				"6281", "Invalid Page Hash of File",
				"3001", "Code Integrity Check",
				"3002", "Code Integrity Check",
				"3003", "Code Integrity Check",
				"3004", "Code Integrity Check",
				"3010", "Code Integrity Check",
				"3023", "Code Integrity Check",
				"219", "Failed Kernal Driver Loading",
				"1125", "GP Internal Error",
				"1127", "GP Generic Error",
				"1129", "GP Application Failed due to Connectivity"
			]
		}
	}
}

output {

	elasticsearch { }
	
	#stdout {
	#	codec => rubydebug
	#}
}

